#pragma once

#include <dev/uart>

namespace saturn {
namespace core {

using namespace device;

enum class fmt {
	dec,		// Display integers in decimal format
	endl,		// Line break and carier return
	hex,		// Display integers in heximal format
	fill,		// Fill number displaying by '0' till 8 digits in total
	nofill		// Disable filling the number by '0'
};

class IConsole
{
public:
	virtual IConsole& operator<<(fmt format) = 0;
	virtual IConsole& operator<<(char const *msg) = 0;

	// NOTE: At the moment no need to support 8- and 16-bit numbers
	//       to keep the interface simple
	virtual IConsole& operator<<(int32_t num) = 0;
	virtual IConsole& operator<<(uint32_t num) = 0;
	virtual IConsole& operator<<(int64_t num) = 0;
	virtual IConsole& operator<<(uint64_t num) = 0;

	virtual IConsole& operator<<(size_t num) = 0;
};

IConsole& Log();

}; // namespace core
}; // namespace saturn
