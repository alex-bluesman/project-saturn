// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>

namespace saturn {

#define SetBit(value, pos)	value |= (1 << pos)
#define ClearBit(value, pos)	value &= ~(1 << pos)

template<typename T>
size_t FirstSetBit(T value)
{
	size_t nr;

	for (nr = 0; nr < sizeof(T) * 8; nr++)
	{
		if (value & (1 << nr))
		{
			break;
		}
	}

	return nr;
}	

template<typename T>
size_t FirstCleanBit(T value)
{
	size_t nr;

	for (nr = 0; nr < sizeof(T) * 8; nr++)
	{
		if ((value & (1 << nr)) == 0)
		{
			break;
		}
	}

	return nr;
}	


}; // namespace saturn
