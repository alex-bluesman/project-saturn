// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>

namespace saturn {

template<typename T>
static inline void MSet(void* addr, size_t n, T val)
{
	volatile T* ptr = static_cast<T*>(addr);

	while (n--)
	{
		*ptr++ = val;
	}
}

template<typename T>
static inline void MCopy(void* src, void* dst, size_t n)
{
	volatile T* s = static_cast<T*>(src);
	volatile T* d = static_cast<T*>(dst);

	while (n--)
	{
		*d++ = *s++;
	}
}

}; // namespace saturn
