// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>

namespace saturn {
namespace core {

// Memory mapping types:
enum class MMapType {
	Device,
	Normal
};

// Supported memory block sizes
enum BlockSize
{
	L3_Page = 4 * 1024,		// 4KB page
	L2_Block = 2 * 1024 * 1024,	// 2MB block
	L1_Block = 1024 * 1024 * 1024	// 1GB block
};

class IMemoryManagementUnit {
public:
	virtual void *MemoryMap(uint64_t virt_addr, uint64_t phys_addr, size_t size, MMapType type) = 0;
	virtual void MemoryUnmap(uint64_t base_addr, size_t size) = 0;
};

// Access to memory management unit
IMemoryManagementUnit& MMU(void);

}; // namespace core
}; // namespace saturn
