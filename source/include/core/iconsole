// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>

namespace saturn {
namespace core {

enum class fmt {
	dec,		// Display integers in decimal format
	endl,		// Line break and carier return
	hex,		// Display integers in heximal format
	fill,		// Fill number displaying by '0' till 8 digits in total
	nofill		// Disable filling the number by '0'
};

enum class llevel {
	log,
	info,
	error,
	none
};

class IConsole
{
public:
	virtual IConsole& operator<<(fmt format) = 0;
	virtual IConsole& operator<<(llevel level) = 0;

	virtual IConsole& operator<<(char const *msg) = 0;

	// NOTE: At the moment no need to support 8- and 16-bit numbers
	//       to keep the interface simple
	virtual IConsole& operator<<(int32_t num) = 0;
	virtual IConsole& operator<<(uint32_t num) = 0;
	virtual IConsole& operator<<(int64_t num) = 0;
	virtual IConsole& operator<<(uint64_t num) = 0;

	virtual IConsole& operator<<(size_t num) = 0;
};

// Access to console
IConsole& ConIO(void);

// Helper wrappers to use different log levels
static inline IConsole& Log(void)
{
	return ConIO() << llevel::log;
}

static inline IConsole& Info(void)
{
	return ConIO() << llevel::info;
}

static inline IConsole& Error(void)
{
	return ConIO() << llevel::error;
}

}; // namespace core
}; // namespace saturn
