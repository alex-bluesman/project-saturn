// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>

namespace saturn {
namespace core {

using IRqHandler = void(*)(uint32_t);

class IIC
{
public:
	virtual void Local_IRq_Disable() = 0;
	virtual void Local_IRq_Enable() = 0;
	virtual void Send_SGI(uint32_t, uint8_t) = 0;
	virtual void Handle_IRq() = 0;
	virtual void Register_IRq_Handler(uint32_t, IRqHandler) = 0;

public:
	virtual void Start_Virt_IC() = 0;
	virtual void Stop_Virt_IC() = 0;
	virtual void Inject_VM_IRq(uint32_t) = 0;
};

// Access to interrupt controller
IIC& iIC(void);

}; // namespace core
}; // namespace saturn
