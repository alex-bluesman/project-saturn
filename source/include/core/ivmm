// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>

namespace saturn {
namespace core {

enum class vm_state
{
	running,
	request_shutdown,
	stopped,
	error
};

// Forward declaration:
struct Memory_Region;

class IVirtualMachineConfig
{
public:
	virtual void VM_Assign_Interrupt(size_t) = 0;
	virtual void VM_Assign_Memory_Region(Memory_Region) = 0;
	virtual void VM_Set_Entry_Address(uint64_t) = 0;
};

class IVirtualMachineManager
{
public:
	virtual void Start_VM() = 0;
	virtual void Stop_VM() = 0;
	virtual vm_state Get_VM_State() = 0;

public:
	virtual bool Guest_IRq(uint32_t nr) = 0;
};

// Access to CPU interface
IVirtualMachineManager& iVMM(void);

}; // namespace core
}; // namespace saturn
