// Copyright (C) 2023 Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
//
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed 
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
// CONDITIONS OF ANY KIND, either express or implied. See the License for the 
// specific language governing permissions and limitations under the License.

#pragma once

#include <basetypes>
#include <system>

namespace saturn {

#define WriteArm64Reg(_reg, _val)				\
	do {							\
		uint64_t v = _val;				\
		asm volatile("msr " #_reg ", %0\n"		\
			     "dsb sy\n"				\
			     : : "r" (v));			\
	} while (0)

#define ReadArm64Reg(_reg)					\
	({							\
		uint64_t v;					\
		asm volatile("mrs  %0, " #_reg "\n"		\
			     "dsb sy\n"				\
			     : "=r" (v));			\
		v;						\
	})

struct AArch64_Regs {
	// General purpose registers
	uint64_t	x0;
	uint64_t	x1;
	uint64_t	x2;
	uint64_t	x3;
	uint64_t	x4;
	uint64_t	x5;
	uint64_t	x6;
	uint64_t	x7;
	uint64_t	x8;
	uint64_t	x9;
	uint64_t	x10;
	uint64_t	x11;
	uint64_t	x12;
	uint64_t	x13;
	uint64_t	x14;
	uint64_t	x15;
	uint64_t	x16;
	uint64_t	x17;
	uint64_t	x18;
	uint64_t	x19;
	uint64_t	x20;
	uint64_t	x21;
	uint64_t	x22;
	uint64_t	x23;
	uint64_t	x24;
	uint64_t	x25;
	uint64_t	x26;
	uint64_t	x27;
	uint64_t	x28;
	uint64_t	x29;

	// EL2 (Hyp) mode registers
	uint64_t	lr_el2;
	uint64_t	sp_el2;
	uint64_t	pc_el2;
	uint64_t	cpsr_el2;

	// EL1 (Sys) mode registers
	uint64_t	lr_el1;
	uint64_t	sp_el1;
	uint64_t	pc_el1;
	uint64_t	cpsr_el1;
};

// Let's use these wrappers to correclty expand macro parameters
// We need it to access GIC system registers
#define ReadICCReg(_reg)		ReadArm64Reg(_reg)	
#define WriteICCReg(_reg, _val)		WriteArm64Reg(_reg, _val)	

// GNU AS is not aware about GIC symbolic register names
#define ICC_PMR_EL1		s3_0_c4_c6_0
#define ICC_DIR_EL1		s3_0_c12_c11_1
#define ICC_SGI1R_EL1		s3_0_c12_c11_5
#define ICC_IAR1_EL1		s3_0_c12_c12_0
#define ICC_EOIR1_EL1		s3_0_c12_c12_1
#define ICC_BPR1_EL1		s3_0_c12_c12_3
#define ICC_CTRL_EL1		s3_0_c12_c12_4
#define ICC_IGRPEN1_EL1		s3_0_c12_c12_7
#define ICC_SRE_EL2		s3_4_c12_c9_5

#define ICH_HCR_EL2		s3_4_c12_c11_0
#define ICH_EISR_EL2		s3_4_c12_c11_3
#define ICH_VMCR_EL2		s3_4_c12_c11_7

#define ICH_LR0_EL2		s3_4_c12_c12_0
#define ICH_LR1_EL2		s3_4_c12_c12_1
#define ICH_LR2_EL2		s3_4_c12_c12_2
#define ICH_LR3_EL2		s3_4_c12_c12_3
#define ICH_LR4_EL2		s3_4_c12_c12_4
#define ICH_LR5_EL2		s3_4_c12_c12_5
#define ICH_LR6_EL2		s3_4_c12_c12_6
#define ICH_LR7_EL2		s3_4_c12_c12_7
#define ICH_LR8_EL2		s3_4_c12_c13_0
#define ICH_LR9_EL2		s3_4_c12_c13_1
#define ICH_LR10_EL2		s3_4_c12_c13_2
#define ICH_LR11_EL2		s3_4_c12_c13_3
#define ICH_LR12_EL2		s3_4_c12_c13_4
#define ICH_LR13_EL2		s3_4_c12_c13_5
#define ICH_LR14_EL2		s3_4_c12_c13_6
#define ICH_LR15_EL2		s3_4_c12_c13_7

}; // namespace saturn
